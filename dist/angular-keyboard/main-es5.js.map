{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/keyboard/keyboard.component.ts","webpack:///src/app/notes.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","description","console","log","onUpdate","selector","template","styles","AppModule","provide","useClass","declarations","imports","providers","bootstrap","KeyboardComponent","notes","synthOptions","oscillator","frequency","detune","type","phase","envelope","attack","decay","sustain","release","synth","toMaster","keyNoteMap","a","w","s","d","f","t","g","y","h","u","j","gcsMap","c","cS","dS","fS","gS","aS","b","toneMap","activeKeys","event","pressedKey","key","isActive","isNoteActive","push","playNote","filter","note","triggerAttackRelease","length","isNatural","gs","activeKey","some","isDownKey","downKey","NotesService","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <main>\n      <section>\n        <h1>\n          {{ title }}\n        </h1>\n        <p>\n          {{ description }}\n        </p>\n        <app-keyboard (update)=\"onUpdate($event)\">\n          keys will go in here\n        </app-keyboard>\n      </section>\n      <footer>\n        <ul>\n          <li><a href=\"\"></a></li>\n          <li><a href=\"\"></a></li>\n          <li><a href=\"\"></a></li>\n        </ul>\n        <p>Built with <a href=\"https://www.jamescript.com\">JameScript</a></p>\n      </footer>\n    </main>\n  `,\n  styles: [\n    `\n      :host {\n      }\n\n      footer {\n        color: white;\n        box-sizing: border-box;\n        display: grid;\n        align-items: center;\n        justify-items: center;\n        max-height: 160px;\n      }\n\n      ul {\n        list-style: none;\n        padding: 0;\n      }\n\n      li {\n        display: inline-block;\n      }\n\n      p {\n      }\n\n      section {\n        box-sizing: border-box;\n        display: grid;\n        padding: 40px;\n        border-radius: 10px;\n        background-color: white;\n        background: linear-gradient(\n            to top,\n            rgba(128, 128, 128, 0.8) 0%,\n            rgba(230, 230, 250, 0.2) 2%,\n            rgba(230, 230, 250, 0.2) 98%,\n            rgba(128, 128, 128, 0.8) 100%\n          ),\n          linear-gradient(\n            to left,\n            rgba(128, 128, 128, 0.8) 0%,\n            rgba(230, 230, 250, 0.8) 1%,\n            rgba(230, 230, 250, 0.8) 99%,\n            rgba(128, 128, 128, 0.8) 100%\n          );\n        box-shadow: 0 1px 5px 0 black;\n      }\n\n      h1 {\n        color: white;\n        text-shadow: 1px 1px 1px black;\n        margin: 0 0 10px;\n      }\n\n      p {\n        margin-top: 0;\n        margin-bottom: 20px;\n      }\n    `,\n  ],\n})\nexport class AppComponent {\n  constructor() {}\n\n  onUpdate(e) {\n    console.log(e);\n  }\n\n  public title = 'EJ-ANG-900';\n  public description =\n    'A simple sythesizer built in Angular for your enjoyment';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { KeyboardComponent } from './keyboard/keyboard.component';\nimport { NotesService } from './notes.service';\n\n@NgModule({\n  declarations: [AppComponent, KeyboardComponent],\n  imports: [BrowserModule],\n  providers: [{ provide: 'notes', useClass: NotesService }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Inject, OnInit, HostListener } from '@angular/core';\nimport { Synth } from 'tone';\n\n@Component({\n  selector: 'app-keyboard',\n  template: `\n    <section class=\"keyboard\">\n      <button\n        *ngFor=\"let key of notes.keys\"\n        [ngClass]=\"{\n          mousedown: isMouseDown(key),\n          key: true,\n          natural: isNatural(key)\n        }\"\n        [style]=\"getGridStyles(key)\"\n        (mousedown)=\"handleMouseDown(key)\"\n        (mouseup)=\"handleMouseUp()\"\n      >\n        {{ key }}\n      </button>\n    </section>\n  `,\n  styles: [\n    `\n      .keyboard {\n        display: grid;\n        padding: 0;\n        margin: 0;\n        min-height: 40vh;\n        grid-template-rows: 2fr 1fr;\n        grid-template-columns: repeat(21, 1fr);\n      }\n\n      .key {\n        border: none;\n        border-bottom: 2px solid gray;\n        border-radius: 0 0 10px 10px;\n        background-color: DimGray;\n        box-sizing: border-box;\n        width: 100%;\n        height: 100%;\n        transition: all 0.2s ease;\n        box-shadow: inset 0 3px 1px 0 rgba(0, 0, 0, 0.5);\n        transform-origin: top center;\n        perspective: 500px;\n      }\n\n      .natural {\n        background-color: WhiteSmoke;\n      }\n\n      .mousedown {\n        box-shadow: inset 0 2px 5px 0 rgba(0, 0, 0, 1);\n        background-color: hotpink;\n        border-bottom: 1px solid Gainsboro;\n        transform: rotateX(8deg);\n      }\n    `,\n  ],\n})\nexport class KeyboardComponent implements OnInit {\n  @HostListener('document:keydown', ['$event'])\n  @HostListener('document:keyup', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    const pressedKey = this.keyNoteMap[event.key];\n    const isActive = this.isNoteActive(pressedKey);\n    if (event.type === 'keydown' && !isActive) {\n      this.activeKeys.push(pressedKey);\n      this.playNote(this.toneMap[pressedKey]);\n    }\n    if (event.type === 'keyup' && isActive) {\n      this.activeKeys = this.activeKeys.filter((key) => key !== pressedKey);\n    }\n  }\n\n  playNote(note: string) {\n    this.synth.triggerAttackRelease(note, '8n');\n  }\n\n  synthOptions = {\n    oscillator: {\n      frequency: 440,\n      detune: 0,\n      type: 'sine',\n      phase: 0,\n    },\n    envelope: {\n      attack: 0.005,\n      decay: 0.1,\n      sustain: 0.3,\n      release: 1,\n    },\n  };\n\n  synth = new Synth(this.synthOptions).toMaster();\n\n  constructor(@Inject('notes') public notes) {}\n\n  keyNoteMap = {\n    a: 'c',\n    w: 'cS',\n    s: 'd',\n    e: 'dS',\n    d: 'e',\n    f: 'f',\n    t: 'fS',\n    g: 'g',\n    y: 'gS',\n    h: 'a',\n    u: 'aS',\n    j: 'b',\n  };\n\n  gcsMap = {\n    c: 1,\n    cS: 3,\n    d: 4,\n    dS: 6,\n    e: 7,\n    f: 10,\n    fS: 12,\n    g: 13,\n    gS: 15,\n    a: 16,\n    aS: 18,\n    b: 19,\n  };\n\n  toneMap = {\n    c: 'C4',\n    cS: 'C#4',\n    d: 'D4',\n    dS: 'D#4',\n    e: 'E4',\n    f: 'F4',\n    fS: 'F#4',\n    g: 'G4',\n    gS: 'G#4',\n    a: 'A4',\n    aS: 'A#4',\n    b: 'B4',\n  };\n\n  activeKeys = [];\n\n  isNatural(key) {\n    return key.length === 1;\n  }\n\n  getGridStyles(key) {\n    const isNatural = this.isNatural(key);\n    const gs = isNatural ? '3' : '2';\n    return `\n    grid-column-start: ${this.gcsMap[key]};\n    grid-row: 1 / ${gs};\n    grid-column-end: span ${gs};\n    z-index: ${!isNatural ? 10 : 1};\n    `;\n  }\n\n  isNoteActive(activeKey: string) {\n    return this.activeKeys.some((key) => activeKey === key);\n  }\n\n  isMouseDown(isDownKey: string) {\n    return this.isNoteActive(isDownKey);\n  }\n\n  handleMouseDown(downKey: string) {\n    this.playNote(this.toneMap[downKey]);\n    this.activeKeys.push(downKey);\n  }\n\n  handleMouseUp() {\n    this.activeKeys = [];\n  }\n\n  ngOnInit() {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotesService {\n  keys = ['c', 'cS', 'd', 'dS', 'e', 'f', 'fS', 'g', 'gS', 'a', 'aS', 'b'];\n  constructor() {}\n\n  getNote() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}